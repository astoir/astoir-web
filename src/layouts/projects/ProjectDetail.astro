---
import Layout from "~layouts/BaseLayout.astro";
import dayjs from "dayjs";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import { getProjects } from "~utils/getProjects";
import type { ProjectEntry } from "~types/project.type";
import ProjectDetailContent from "~components/Section/ProjectDetailContent";

interface Props {
  project: CollectionEntry<"projects">;
  isAdmin: boolean;
}

const { project, isAdmin } = Astro.props;

if (!project) {
  return Astro.redirect("/404");
}

const { Content } = await render(project);

// 날짜 포맷팅
const period = `${dayjs(project.data.startedAt).format("YYYY.MM")} - ${project.data.endedAt ? dayjs(project.data.endedAt).format("YYYY.MM") : "진행중"}`;

// 각 스택별 관련 프로젝트 가져오기
const relatedProjects: Record<number, ProjectEntry[]> = {};
for (const stackId of project.data.stackIds) {
  const projects = await getProjects({
    filter: {
      stackIds: [stackId],
    },
    sort: {
      field: "startedAt",
      order: "desc",
    },
  });
  relatedProjects[stackId] = projects;
}
---

<Layout title={project.data.projectName}>
  <ProjectDetailContent
    client:load
    project={project}
    isAdmin={isAdmin}
    period={period}
    relatedProjects={relatedProjects}
  >
    <Content />
  </ProjectDetailContent>
</Layout>

<style>
  /* 4:3 비율 유지를 위한 유틸리티 클래스 */
  :global(.aspect-4\/3) {
    aspect-ratio: 4/3;
  }

  /* 작은 화면에서 최소 높이 설정 */
  @media (max-height: 600px) {
    :global(.aspect-4\/3) {
      min-height: 200px;
    }
  }

  /* 큰 화면에서 최대 높이 제한 */
  @media (min-height: 1200px) {
    :global(.aspect-4\/3) {
      max-height: 700px;
    }
  }
</style>
